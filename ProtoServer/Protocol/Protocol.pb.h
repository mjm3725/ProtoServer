// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Protocol.proto

#ifndef PROTOBUF_Protocol_2eproto__INCLUDED
#define PROTOBUF_Protocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_Protocol_2eproto();
void protobuf_InitDefaults_Protocol_2eproto();
void protobuf_AssignDesc_Protocol_2eproto();
void protobuf_ShutdownFile_Protocol_2eproto();

class GameObjectInfo;
class NotifyEnterGameObject;
class NotifyLeaveGameObject;
class PkVector3;
class ReqEnterWorld;
class ReqLogin;
class ReqReadyEnterWorld;
class ResEnterWorld;
class ResLogin;
class ResReadyEnterWorld;

enum PacketCommand {
  REQ_LOGIN = 0,
  RES_LOGIN = 1,
  REQ_READY_ENTER_WORLD = 2,
  RES_READY_ENTER_WORLD = 3,
  REQ_ENTER_WORLD = 4,
  RES_ENTER_WORLD = 5,
  NOTIFY_ENTER_GAME_OBJECT = 6,
  NOTIFY_LEAVE_GAME_OBJECT = 7,
  PacketCommand_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PacketCommand_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PacketCommand_IsValid(int value);
const PacketCommand PacketCommand_MIN = REQ_LOGIN;
const PacketCommand PacketCommand_MAX = NOTIFY_LEAVE_GAME_OBJECT;
const int PacketCommand_ARRAYSIZE = PacketCommand_MAX + 1;

const ::google::protobuf::EnumDescriptor* PacketCommand_descriptor();
inline const ::std::string& PacketCommand_Name(PacketCommand value) {
  return ::google::protobuf::internal::NameOfEnum(
    PacketCommand_descriptor(), value);
}
inline bool PacketCommand_Parse(
    const ::std::string& name, PacketCommand* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PacketCommand>(
    PacketCommand_descriptor(), name, value);
}
enum PacketResult {
  SUCCESS = 0,
  FAIL = 1,
  PacketResult_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PacketResult_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PacketResult_IsValid(int value);
const PacketResult PacketResult_MIN = SUCCESS;
const PacketResult PacketResult_MAX = FAIL;
const int PacketResult_ARRAYSIZE = PacketResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* PacketResult_descriptor();
inline const ::std::string& PacketResult_Name(PacketResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    PacketResult_descriptor(), value);
}
inline bool PacketResult_Parse(
    const ::std::string& name, PacketResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PacketResult>(
    PacketResult_descriptor(), name, value);
}
// ===================================================================

class ReqLogin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ReqLogin) */ {
 public:
  ReqLogin();
  virtual ~ReqLogin();

  ReqLogin(const ReqLogin& from);

  inline ReqLogin& operator=(const ReqLogin& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqLogin& default_instance();

  static const ReqLogin* internal_default_instance();

  void Swap(ReqLogin* other);

  // implements Message ----------------------------------------------

  inline ReqLogin* New() const { return New(NULL); }

  ReqLogin* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqLogin& from);
  void MergeFrom(const ReqLogin& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqLogin* other);
  void UnsafeMergeFrom(const ReqLogin& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:ReqLogin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_Protocol_2eproto_impl();
  friend void  protobuf_AddDesc_Protocol_2eproto_impl();
  friend void protobuf_AssignDesc_Protocol_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqLogin> ReqLogin_default_instance_;

// -------------------------------------------------------------------

class ResLogin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ResLogin) */ {
 public:
  ResLogin();
  virtual ~ResLogin();

  ResLogin(const ResLogin& from);

  inline ResLogin& operator=(const ResLogin& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResLogin& default_instance();

  static const ResLogin* internal_default_instance();

  void Swap(ResLogin* other);

  // implements Message ----------------------------------------------

  inline ResLogin* New() const { return New(NULL); }

  ResLogin* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResLogin& from);
  void MergeFrom(const ResLogin& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResLogin* other);
  void UnsafeMergeFrom(const ResLogin& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .PacketResult result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::PacketResult result() const;
  void set_result(::PacketResult value);

  // @@protoc_insertion_point(class_scope:ResLogin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int result_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_Protocol_2eproto_impl();
  friend void  protobuf_AddDesc_Protocol_2eproto_impl();
  friend void protobuf_AssignDesc_Protocol_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ResLogin> ResLogin_default_instance_;

// -------------------------------------------------------------------

class ReqReadyEnterWorld : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ReqReadyEnterWorld) */ {
 public:
  ReqReadyEnterWorld();
  virtual ~ReqReadyEnterWorld();

  ReqReadyEnterWorld(const ReqReadyEnterWorld& from);

  inline ReqReadyEnterWorld& operator=(const ReqReadyEnterWorld& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqReadyEnterWorld& default_instance();

  static const ReqReadyEnterWorld* internal_default_instance();

  void Swap(ReqReadyEnterWorld* other);

  // implements Message ----------------------------------------------

  inline ReqReadyEnterWorld* New() const { return New(NULL); }

  ReqReadyEnterWorld* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqReadyEnterWorld& from);
  void MergeFrom(const ReqReadyEnterWorld& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqReadyEnterWorld* other);
  void UnsafeMergeFrom(const ReqReadyEnterWorld& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ReqReadyEnterWorld)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_Protocol_2eproto_impl();
  friend void  protobuf_AddDesc_Protocol_2eproto_impl();
  friend void protobuf_AssignDesc_Protocol_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqReadyEnterWorld> ReqReadyEnterWorld_default_instance_;

// -------------------------------------------------------------------

class PkVector3 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PkVector3) */ {
 public:
  PkVector3();
  virtual ~PkVector3();

  PkVector3(const PkVector3& from);

  inline PkVector3& operator=(const PkVector3& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkVector3& default_instance();

  static const PkVector3* internal_default_instance();

  void Swap(PkVector3* other);

  // implements Message ----------------------------------------------

  inline PkVector3* New() const { return New(NULL); }

  PkVector3* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkVector3& from);
  void MergeFrom(const PkVector3& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkVector3* other);
  void UnsafeMergeFrom(const PkVector3& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // optional float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // optional float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:PkVector3)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  float z_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_Protocol_2eproto_impl();
  friend void  protobuf_AddDesc_Protocol_2eproto_impl();
  friend void protobuf_AssignDesc_Protocol_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PkVector3> PkVector3_default_instance_;

// -------------------------------------------------------------------

class GameObjectInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameObjectInfo) */ {
 public:
  GameObjectInfo();
  virtual ~GameObjectInfo();

  GameObjectInfo(const GameObjectInfo& from);

  inline GameObjectInfo& operator=(const GameObjectInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameObjectInfo& default_instance();

  static const GameObjectInfo* internal_default_instance();

  void Swap(GameObjectInfo* other);

  // implements Message ----------------------------------------------

  inline GameObjectInfo* New() const { return New(NULL); }

  GameObjectInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameObjectInfo& from);
  void MergeFrom(const GameObjectInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GameObjectInfo* other);
  void UnsafeMergeFrom(const GameObjectInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 handle = 1;
  void clear_handle();
  static const int kHandleFieldNumber = 1;
  ::google::protobuf::int64 handle() const;
  void set_handle(::google::protobuf::int64 value);

  // optional int32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional .PkVector3 pos = 3;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 3;
  const ::PkVector3& pos() const;
  ::PkVector3* mutable_pos();
  ::PkVector3* release_pos();
  void set_allocated_pos(::PkVector3* pos);

  // optional string name = 4;
  void clear_name();
  static const int kNameFieldNumber = 4;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:GameObjectInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::PkVector3* pos_;
  ::google::protobuf::int64 handle_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_Protocol_2eproto_impl();
  friend void  protobuf_AddDesc_Protocol_2eproto_impl();
  friend void protobuf_AssignDesc_Protocol_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GameObjectInfo> GameObjectInfo_default_instance_;

// -------------------------------------------------------------------

class ResReadyEnterWorld : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ResReadyEnterWorld) */ {
 public:
  ResReadyEnterWorld();
  virtual ~ResReadyEnterWorld();

  ResReadyEnterWorld(const ResReadyEnterWorld& from);

  inline ResReadyEnterWorld& operator=(const ResReadyEnterWorld& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResReadyEnterWorld& default_instance();

  static const ResReadyEnterWorld* internal_default_instance();

  void Swap(ResReadyEnterWorld* other);

  // implements Message ----------------------------------------------

  inline ResReadyEnterWorld* New() const { return New(NULL); }

  ResReadyEnterWorld* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResReadyEnterWorld& from);
  void MergeFrom(const ResReadyEnterWorld& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResReadyEnterWorld* other);
  void UnsafeMergeFrom(const ResReadyEnterWorld& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .PacketResult result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::PacketResult result() const;
  void set_result(::PacketResult value);

  // optional .GameObjectInfo game_object_info = 2;
  bool has_game_object_info() const;
  void clear_game_object_info();
  static const int kGameObjectInfoFieldNumber = 2;
  const ::GameObjectInfo& game_object_info() const;
  ::GameObjectInfo* mutable_game_object_info();
  ::GameObjectInfo* release_game_object_info();
  void set_allocated_game_object_info(::GameObjectInfo* game_object_info);

  // @@protoc_insertion_point(class_scope:ResReadyEnterWorld)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::GameObjectInfo* game_object_info_;
  int result_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_Protocol_2eproto_impl();
  friend void  protobuf_AddDesc_Protocol_2eproto_impl();
  friend void protobuf_AssignDesc_Protocol_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ResReadyEnterWorld> ResReadyEnterWorld_default_instance_;

// -------------------------------------------------------------------

class ReqEnterWorld : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ReqEnterWorld) */ {
 public:
  ReqEnterWorld();
  virtual ~ReqEnterWorld();

  ReqEnterWorld(const ReqEnterWorld& from);

  inline ReqEnterWorld& operator=(const ReqEnterWorld& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqEnterWorld& default_instance();

  static const ReqEnterWorld* internal_default_instance();

  void Swap(ReqEnterWorld* other);

  // implements Message ----------------------------------------------

  inline ReqEnterWorld* New() const { return New(NULL); }

  ReqEnterWorld* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqEnterWorld& from);
  void MergeFrom(const ReqEnterWorld& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqEnterWorld* other);
  void UnsafeMergeFrom(const ReqEnterWorld& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ReqEnterWorld)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_Protocol_2eproto_impl();
  friend void  protobuf_AddDesc_Protocol_2eproto_impl();
  friend void protobuf_AssignDesc_Protocol_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqEnterWorld> ReqEnterWorld_default_instance_;

// -------------------------------------------------------------------

class ResEnterWorld : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ResEnterWorld) */ {
 public:
  ResEnterWorld();
  virtual ~ResEnterWorld();

  ResEnterWorld(const ResEnterWorld& from);

  inline ResEnterWorld& operator=(const ResEnterWorld& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResEnterWorld& default_instance();

  static const ResEnterWorld* internal_default_instance();

  void Swap(ResEnterWorld* other);

  // implements Message ----------------------------------------------

  inline ResEnterWorld* New() const { return New(NULL); }

  ResEnterWorld* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResEnterWorld& from);
  void MergeFrom(const ResEnterWorld& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResEnterWorld* other);
  void UnsafeMergeFrom(const ResEnterWorld& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .PacketResult result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::PacketResult result() const;
  void set_result(::PacketResult value);

  // @@protoc_insertion_point(class_scope:ResEnterWorld)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int result_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_Protocol_2eproto_impl();
  friend void  protobuf_AddDesc_Protocol_2eproto_impl();
  friend void protobuf_AssignDesc_Protocol_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ResEnterWorld> ResEnterWorld_default_instance_;

// -------------------------------------------------------------------

class NotifyEnterGameObject : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NotifyEnterGameObject) */ {
 public:
  NotifyEnterGameObject();
  virtual ~NotifyEnterGameObject();

  NotifyEnterGameObject(const NotifyEnterGameObject& from);

  inline NotifyEnterGameObject& operator=(const NotifyEnterGameObject& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyEnterGameObject& default_instance();

  static const NotifyEnterGameObject* internal_default_instance();

  void Swap(NotifyEnterGameObject* other);

  // implements Message ----------------------------------------------

  inline NotifyEnterGameObject* New() const { return New(NULL); }

  NotifyEnterGameObject* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyEnterGameObject& from);
  void MergeFrom(const NotifyEnterGameObject& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NotifyEnterGameObject* other);
  void UnsafeMergeFrom(const NotifyEnterGameObject& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GameObjectInfo game_object_infos = 1;
  int game_object_infos_size() const;
  void clear_game_object_infos();
  static const int kGameObjectInfosFieldNumber = 1;
  const ::GameObjectInfo& game_object_infos(int index) const;
  ::GameObjectInfo* mutable_game_object_infos(int index);
  ::GameObjectInfo* add_game_object_infos();
  ::google::protobuf::RepeatedPtrField< ::GameObjectInfo >*
      mutable_game_object_infos();
  const ::google::protobuf::RepeatedPtrField< ::GameObjectInfo >&
      game_object_infos() const;

  // @@protoc_insertion_point(class_scope:NotifyEnterGameObject)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::GameObjectInfo > game_object_infos_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_Protocol_2eproto_impl();
  friend void  protobuf_AddDesc_Protocol_2eproto_impl();
  friend void protobuf_AssignDesc_Protocol_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<NotifyEnterGameObject> NotifyEnterGameObject_default_instance_;

// -------------------------------------------------------------------

class NotifyLeaveGameObject : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NotifyLeaveGameObject) */ {
 public:
  NotifyLeaveGameObject();
  virtual ~NotifyLeaveGameObject();

  NotifyLeaveGameObject(const NotifyLeaveGameObject& from);

  inline NotifyLeaveGameObject& operator=(const NotifyLeaveGameObject& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyLeaveGameObject& default_instance();

  static const NotifyLeaveGameObject* internal_default_instance();

  void Swap(NotifyLeaveGameObject* other);

  // implements Message ----------------------------------------------

  inline NotifyLeaveGameObject* New() const { return New(NULL); }

  NotifyLeaveGameObject* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyLeaveGameObject& from);
  void MergeFrom(const NotifyLeaveGameObject& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NotifyLeaveGameObject* other);
  void UnsafeMergeFrom(const NotifyLeaveGameObject& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 game_object_handles = 1;
  int game_object_handles_size() const;
  void clear_game_object_handles();
  static const int kGameObjectHandlesFieldNumber = 1;
  ::google::protobuf::int64 game_object_handles(int index) const;
  void set_game_object_handles(int index, ::google::protobuf::int64 value);
  void add_game_object_handles(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      game_object_handles() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_game_object_handles();

  // @@protoc_insertion_point(class_scope:NotifyLeaveGameObject)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > game_object_handles_;
  mutable int _game_object_handles_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_Protocol_2eproto_impl();
  friend void  protobuf_AddDesc_Protocol_2eproto_impl();
  friend void protobuf_AssignDesc_Protocol_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<NotifyLeaveGameObject> NotifyLeaveGameObject_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ReqLogin

// optional string id = 1;
inline void ReqLogin::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqLogin::id() const {
  // @@protoc_insertion_point(field_get:ReqLogin.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqLogin::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ReqLogin.id)
}
inline void ReqLogin::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ReqLogin.id)
}
inline void ReqLogin::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ReqLogin.id)
}
inline ::std::string* ReqLogin::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ReqLogin.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqLogin::release_id() {
  // @@protoc_insertion_point(field_release:ReqLogin.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqLogin::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ReqLogin.id)
}

inline const ReqLogin* ReqLogin::internal_default_instance() {
  return &ReqLogin_default_instance_.get();
}
// -------------------------------------------------------------------

// ResLogin

// optional .PacketResult result = 1;
inline void ResLogin::clear_result() {
  result_ = 0;
}
inline ::PacketResult ResLogin::result() const {
  // @@protoc_insertion_point(field_get:ResLogin.result)
  return static_cast< ::PacketResult >(result_);
}
inline void ResLogin::set_result(::PacketResult value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:ResLogin.result)
}

inline const ResLogin* ResLogin::internal_default_instance() {
  return &ResLogin_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqReadyEnterWorld

inline const ReqReadyEnterWorld* ReqReadyEnterWorld::internal_default_instance() {
  return &ReqReadyEnterWorld_default_instance_.get();
}
// -------------------------------------------------------------------

// PkVector3

// optional float x = 1;
inline void PkVector3::clear_x() {
  x_ = 0;
}
inline float PkVector3::x() const {
  // @@protoc_insertion_point(field_get:PkVector3.x)
  return x_;
}
inline void PkVector3::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:PkVector3.x)
}

// optional float y = 2;
inline void PkVector3::clear_y() {
  y_ = 0;
}
inline float PkVector3::y() const {
  // @@protoc_insertion_point(field_get:PkVector3.y)
  return y_;
}
inline void PkVector3::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:PkVector3.y)
}

// optional float z = 3;
inline void PkVector3::clear_z() {
  z_ = 0;
}
inline float PkVector3::z() const {
  // @@protoc_insertion_point(field_get:PkVector3.z)
  return z_;
}
inline void PkVector3::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:PkVector3.z)
}

inline const PkVector3* PkVector3::internal_default_instance() {
  return &PkVector3_default_instance_.get();
}
// -------------------------------------------------------------------

// GameObjectInfo

// optional int64 handle = 1;
inline void GameObjectInfo::clear_handle() {
  handle_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GameObjectInfo::handle() const {
  // @@protoc_insertion_point(field_get:GameObjectInfo.handle)
  return handle_;
}
inline void GameObjectInfo::set_handle(::google::protobuf::int64 value) {
  
  handle_ = value;
  // @@protoc_insertion_point(field_set:GameObjectInfo.handle)
}

// optional int32 type = 2;
inline void GameObjectInfo::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 GameObjectInfo::type() const {
  // @@protoc_insertion_point(field_get:GameObjectInfo.type)
  return type_;
}
inline void GameObjectInfo::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:GameObjectInfo.type)
}

// optional .PkVector3 pos = 3;
inline bool GameObjectInfo::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void GameObjectInfo::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::PkVector3& GameObjectInfo::pos() const {
  // @@protoc_insertion_point(field_get:GameObjectInfo.pos)
  return pos_ != NULL ? *pos_
                         : *::PkVector3::internal_default_instance();
}
inline ::PkVector3* GameObjectInfo::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::PkVector3;
  }
  // @@protoc_insertion_point(field_mutable:GameObjectInfo.pos)
  return pos_;
}
inline ::PkVector3* GameObjectInfo::release_pos() {
  // @@protoc_insertion_point(field_release:GameObjectInfo.pos)
  
  ::PkVector3* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void GameObjectInfo::set_allocated_pos(::PkVector3* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:GameObjectInfo.pos)
}

// optional string name = 4;
inline void GameObjectInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GameObjectInfo::name() const {
  // @@protoc_insertion_point(field_get:GameObjectInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameObjectInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GameObjectInfo.name)
}
inline void GameObjectInfo::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GameObjectInfo.name)
}
inline void GameObjectInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GameObjectInfo.name)
}
inline ::std::string* GameObjectInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:GameObjectInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameObjectInfo::release_name() {
  // @@protoc_insertion_point(field_release:GameObjectInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameObjectInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:GameObjectInfo.name)
}

inline const GameObjectInfo* GameObjectInfo::internal_default_instance() {
  return &GameObjectInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// ResReadyEnterWorld

// optional .PacketResult result = 1;
inline void ResReadyEnterWorld::clear_result() {
  result_ = 0;
}
inline ::PacketResult ResReadyEnterWorld::result() const {
  // @@protoc_insertion_point(field_get:ResReadyEnterWorld.result)
  return static_cast< ::PacketResult >(result_);
}
inline void ResReadyEnterWorld::set_result(::PacketResult value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:ResReadyEnterWorld.result)
}

// optional .GameObjectInfo game_object_info = 2;
inline bool ResReadyEnterWorld::has_game_object_info() const {
  return this != internal_default_instance() && game_object_info_ != NULL;
}
inline void ResReadyEnterWorld::clear_game_object_info() {
  if (GetArenaNoVirtual() == NULL && game_object_info_ != NULL) delete game_object_info_;
  game_object_info_ = NULL;
}
inline const ::GameObjectInfo& ResReadyEnterWorld::game_object_info() const {
  // @@protoc_insertion_point(field_get:ResReadyEnterWorld.game_object_info)
  return game_object_info_ != NULL ? *game_object_info_
                         : *::GameObjectInfo::internal_default_instance();
}
inline ::GameObjectInfo* ResReadyEnterWorld::mutable_game_object_info() {
  
  if (game_object_info_ == NULL) {
    game_object_info_ = new ::GameObjectInfo;
  }
  // @@protoc_insertion_point(field_mutable:ResReadyEnterWorld.game_object_info)
  return game_object_info_;
}
inline ::GameObjectInfo* ResReadyEnterWorld::release_game_object_info() {
  // @@protoc_insertion_point(field_release:ResReadyEnterWorld.game_object_info)
  
  ::GameObjectInfo* temp = game_object_info_;
  game_object_info_ = NULL;
  return temp;
}
inline void ResReadyEnterWorld::set_allocated_game_object_info(::GameObjectInfo* game_object_info) {
  delete game_object_info_;
  game_object_info_ = game_object_info;
  if (game_object_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ResReadyEnterWorld.game_object_info)
}

inline const ResReadyEnterWorld* ResReadyEnterWorld::internal_default_instance() {
  return &ResReadyEnterWorld_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqEnterWorld

inline const ReqEnterWorld* ReqEnterWorld::internal_default_instance() {
  return &ReqEnterWorld_default_instance_.get();
}
// -------------------------------------------------------------------

// ResEnterWorld

// optional .PacketResult result = 1;
inline void ResEnterWorld::clear_result() {
  result_ = 0;
}
inline ::PacketResult ResEnterWorld::result() const {
  // @@protoc_insertion_point(field_get:ResEnterWorld.result)
  return static_cast< ::PacketResult >(result_);
}
inline void ResEnterWorld::set_result(::PacketResult value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:ResEnterWorld.result)
}

inline const ResEnterWorld* ResEnterWorld::internal_default_instance() {
  return &ResEnterWorld_default_instance_.get();
}
// -------------------------------------------------------------------

// NotifyEnterGameObject

// repeated .GameObjectInfo game_object_infos = 1;
inline int NotifyEnterGameObject::game_object_infos_size() const {
  return game_object_infos_.size();
}
inline void NotifyEnterGameObject::clear_game_object_infos() {
  game_object_infos_.Clear();
}
inline const ::GameObjectInfo& NotifyEnterGameObject::game_object_infos(int index) const {
  // @@protoc_insertion_point(field_get:NotifyEnterGameObject.game_object_infos)
  return game_object_infos_.Get(index);
}
inline ::GameObjectInfo* NotifyEnterGameObject::mutable_game_object_infos(int index) {
  // @@protoc_insertion_point(field_mutable:NotifyEnterGameObject.game_object_infos)
  return game_object_infos_.Mutable(index);
}
inline ::GameObjectInfo* NotifyEnterGameObject::add_game_object_infos() {
  // @@protoc_insertion_point(field_add:NotifyEnterGameObject.game_object_infos)
  return game_object_infos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::GameObjectInfo >*
NotifyEnterGameObject::mutable_game_object_infos() {
  // @@protoc_insertion_point(field_mutable_list:NotifyEnterGameObject.game_object_infos)
  return &game_object_infos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::GameObjectInfo >&
NotifyEnterGameObject::game_object_infos() const {
  // @@protoc_insertion_point(field_list:NotifyEnterGameObject.game_object_infos)
  return game_object_infos_;
}

inline const NotifyEnterGameObject* NotifyEnterGameObject::internal_default_instance() {
  return &NotifyEnterGameObject_default_instance_.get();
}
// -------------------------------------------------------------------

// NotifyLeaveGameObject

// repeated int64 game_object_handles = 1;
inline int NotifyLeaveGameObject::game_object_handles_size() const {
  return game_object_handles_.size();
}
inline void NotifyLeaveGameObject::clear_game_object_handles() {
  game_object_handles_.Clear();
}
inline ::google::protobuf::int64 NotifyLeaveGameObject::game_object_handles(int index) const {
  // @@protoc_insertion_point(field_get:NotifyLeaveGameObject.game_object_handles)
  return game_object_handles_.Get(index);
}
inline void NotifyLeaveGameObject::set_game_object_handles(int index, ::google::protobuf::int64 value) {
  game_object_handles_.Set(index, value);
  // @@protoc_insertion_point(field_set:NotifyLeaveGameObject.game_object_handles)
}
inline void NotifyLeaveGameObject::add_game_object_handles(::google::protobuf::int64 value) {
  game_object_handles_.Add(value);
  // @@protoc_insertion_point(field_add:NotifyLeaveGameObject.game_object_handles)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
NotifyLeaveGameObject::game_object_handles() const {
  // @@protoc_insertion_point(field_list:NotifyLeaveGameObject.game_object_handles)
  return game_object_handles_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
NotifyLeaveGameObject::mutable_game_object_handles() {
  // @@protoc_insertion_point(field_mutable_list:NotifyLeaveGameObject.game_object_handles)
  return &game_object_handles_;
}

inline const NotifyLeaveGameObject* NotifyLeaveGameObject::internal_default_instance() {
  return &NotifyLeaveGameObject_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::PacketCommand> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PacketCommand>() {
  return ::PacketCommand_descriptor();
}
template <> struct is_proto_enum< ::PacketResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PacketResult>() {
  return ::PacketResult_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Protocol_2eproto__INCLUDED
