// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Protocol.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Protocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* ReqLogin_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqLogin_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResLogin_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResLogin_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqReadyEnterWorld_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqReadyEnterWorld_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkVector3_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkVector3_reflection_ = NULL;
const ::google::protobuf::Descriptor* GameObjectInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GameObjectInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResReadyEnterWorld_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResReadyEnterWorld_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqEnterWorld_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqEnterWorld_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResEnterWorld_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResEnterWorld_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyEnterGameObject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyEnterGameObject_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyLeaveGameObject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyLeaveGameObject_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PacketCommand_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PacketResult_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_Protocol_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_Protocol_2eproto() {
  protobuf_AddDesc_Protocol_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Protocol.proto");
  GOOGLE_CHECK(file != NULL);
  ReqLogin_descriptor_ = file->message_type(0);
  static const int ReqLogin_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqLogin, id_),
  };
  ReqLogin_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReqLogin_descriptor_,
      ReqLogin::internal_default_instance(),
      ReqLogin_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReqLogin),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqLogin, _internal_metadata_));
  ResLogin_descriptor_ = file->message_type(1);
  static const int ResLogin_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResLogin, result_),
  };
  ResLogin_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResLogin_descriptor_,
      ResLogin::internal_default_instance(),
      ResLogin_offsets_,
      -1,
      -1,
      -1,
      sizeof(ResLogin),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResLogin, _internal_metadata_));
  ReqReadyEnterWorld_descriptor_ = file->message_type(2);
  static const int ReqReadyEnterWorld_offsets_[1] = {
  };
  ReqReadyEnterWorld_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReqReadyEnterWorld_descriptor_,
      ReqReadyEnterWorld::internal_default_instance(),
      ReqReadyEnterWorld_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReqReadyEnterWorld),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqReadyEnterWorld, _internal_metadata_));
  PkVector3_descriptor_ = file->message_type(3);
  static const int PkVector3_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkVector3, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkVector3, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkVector3, z_),
  };
  PkVector3_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkVector3_descriptor_,
      PkVector3::internal_default_instance(),
      PkVector3_offsets_,
      -1,
      -1,
      -1,
      sizeof(PkVector3),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkVector3, _internal_metadata_));
  GameObjectInfo_descriptor_ = file->message_type(4);
  static const int GameObjectInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameObjectInfo, handle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameObjectInfo, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameObjectInfo, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameObjectInfo, name_),
  };
  GameObjectInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GameObjectInfo_descriptor_,
      GameObjectInfo::internal_default_instance(),
      GameObjectInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(GameObjectInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameObjectInfo, _internal_metadata_));
  ResReadyEnterWorld_descriptor_ = file->message_type(5);
  static const int ResReadyEnterWorld_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResReadyEnterWorld, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResReadyEnterWorld, game_object_info_),
  };
  ResReadyEnterWorld_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResReadyEnterWorld_descriptor_,
      ResReadyEnterWorld::internal_default_instance(),
      ResReadyEnterWorld_offsets_,
      -1,
      -1,
      -1,
      sizeof(ResReadyEnterWorld),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResReadyEnterWorld, _internal_metadata_));
  ReqEnterWorld_descriptor_ = file->message_type(6);
  static const int ReqEnterWorld_offsets_[1] = {
  };
  ReqEnterWorld_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReqEnterWorld_descriptor_,
      ReqEnterWorld::internal_default_instance(),
      ReqEnterWorld_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReqEnterWorld),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqEnterWorld, _internal_metadata_));
  ResEnterWorld_descriptor_ = file->message_type(7);
  static const int ResEnterWorld_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResEnterWorld, result_),
  };
  ResEnterWorld_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResEnterWorld_descriptor_,
      ResEnterWorld::internal_default_instance(),
      ResEnterWorld_offsets_,
      -1,
      -1,
      -1,
      sizeof(ResEnterWorld),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResEnterWorld, _internal_metadata_));
  NotifyEnterGameObject_descriptor_ = file->message_type(8);
  static const int NotifyEnterGameObject_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyEnterGameObject, game_object_infos_),
  };
  NotifyEnterGameObject_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NotifyEnterGameObject_descriptor_,
      NotifyEnterGameObject::internal_default_instance(),
      NotifyEnterGameObject_offsets_,
      -1,
      -1,
      -1,
      sizeof(NotifyEnterGameObject),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyEnterGameObject, _internal_metadata_));
  NotifyLeaveGameObject_descriptor_ = file->message_type(9);
  static const int NotifyLeaveGameObject_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyLeaveGameObject, game_object_handles_),
  };
  NotifyLeaveGameObject_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NotifyLeaveGameObject_descriptor_,
      NotifyLeaveGameObject::internal_default_instance(),
      NotifyLeaveGameObject_offsets_,
      -1,
      -1,
      -1,
      sizeof(NotifyLeaveGameObject),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyLeaveGameObject, _internal_metadata_));
  PacketCommand_descriptor_ = file->enum_type(0);
  PacketResult_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Protocol_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReqLogin_descriptor_, ReqLogin::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResLogin_descriptor_, ResLogin::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReqReadyEnterWorld_descriptor_, ReqReadyEnterWorld::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkVector3_descriptor_, PkVector3::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GameObjectInfo_descriptor_, GameObjectInfo::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResReadyEnterWorld_descriptor_, ResReadyEnterWorld::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReqEnterWorld_descriptor_, ReqEnterWorld::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResEnterWorld_descriptor_, ResEnterWorld::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NotifyEnterGameObject_descriptor_, NotifyEnterGameObject::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NotifyLeaveGameObject_descriptor_, NotifyLeaveGameObject::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Protocol_2eproto() {
  ReqLogin_default_instance_.Shutdown();
  delete ReqLogin_reflection_;
  ResLogin_default_instance_.Shutdown();
  delete ResLogin_reflection_;
  ReqReadyEnterWorld_default_instance_.Shutdown();
  delete ReqReadyEnterWorld_reflection_;
  PkVector3_default_instance_.Shutdown();
  delete PkVector3_reflection_;
  GameObjectInfo_default_instance_.Shutdown();
  delete GameObjectInfo_reflection_;
  ResReadyEnterWorld_default_instance_.Shutdown();
  delete ResReadyEnterWorld_reflection_;
  ReqEnterWorld_default_instance_.Shutdown();
  delete ReqEnterWorld_reflection_;
  ResEnterWorld_default_instance_.Shutdown();
  delete ResEnterWorld_reflection_;
  NotifyEnterGameObject_default_instance_.Shutdown();
  delete NotifyEnterGameObject_reflection_;
  NotifyLeaveGameObject_default_instance_.Shutdown();
  delete NotifyLeaveGameObject_reflection_;
}

void protobuf_InitDefaults_Protocol_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  ReqLogin_default_instance_.DefaultConstruct();
  ResLogin_default_instance_.DefaultConstruct();
  ReqReadyEnterWorld_default_instance_.DefaultConstruct();
  PkVector3_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  GameObjectInfo_default_instance_.DefaultConstruct();
  ResReadyEnterWorld_default_instance_.DefaultConstruct();
  ReqEnterWorld_default_instance_.DefaultConstruct();
  ResEnterWorld_default_instance_.DefaultConstruct();
  NotifyEnterGameObject_default_instance_.DefaultConstruct();
  NotifyLeaveGameObject_default_instance_.DefaultConstruct();
  ReqLogin_default_instance_.get_mutable()->InitAsDefaultInstance();
  ResLogin_default_instance_.get_mutable()->InitAsDefaultInstance();
  ReqReadyEnterWorld_default_instance_.get_mutable()->InitAsDefaultInstance();
  PkVector3_default_instance_.get_mutable()->InitAsDefaultInstance();
  GameObjectInfo_default_instance_.get_mutable()->InitAsDefaultInstance();
  ResReadyEnterWorld_default_instance_.get_mutable()->InitAsDefaultInstance();
  ReqEnterWorld_default_instance_.get_mutable()->InitAsDefaultInstance();
  ResEnterWorld_default_instance_.get_mutable()->InitAsDefaultInstance();
  NotifyEnterGameObject_default_instance_.get_mutable()->InitAsDefaultInstance();
  NotifyLeaveGameObject_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_Protocol_2eproto_once_);
void protobuf_InitDefaults_Protocol_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_Protocol_2eproto_once_,
                 &protobuf_InitDefaults_Protocol_2eproto_impl);
}
void protobuf_AddDesc_Protocol_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_Protocol_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016Protocol.proto\"\026\n\010ReqLogin\022\n\n\002id\030\001 \001(\t"
    "\")\n\010ResLogin\022\035\n\006result\030\001 \001(\0162\r.PacketRes"
    "ult\"\024\n\022ReqReadyEnterWorld\",\n\tPkVector3\022\t"
    "\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"U\n\016GameO"
    "bjectInfo\022\016\n\006handle\030\001 \001(\003\022\014\n\004type\030\002 \001(\005\022"
    "\027\n\003pos\030\003 \001(\0132\n.PkVector3\022\014\n\004name\030\004 \001(\t\"^"
    "\n\022ResReadyEnterWorld\022\035\n\006result\030\001 \001(\0162\r.P"
    "acketResult\022)\n\020game_object_info\030\002 \001(\0132\017."
    "GameObjectInfo\"\017\n\rReqEnterWorld\".\n\rResEn"
    "terWorld\022\035\n\006result\030\001 \001(\0162\r.PacketResult\""
    "C\n\025NotifyEnterGameObject\022*\n\021game_object_"
    "infos\030\001 \003(\0132\017.GameObjectInfo\"4\n\025NotifyLe"
    "aveGameObject\022\033\n\023game_object_handles\030\001 \003"
    "(\003*\311\001\n\rPacketCommand\022\r\n\tREQ_LOGIN\020\000\022\r\n\tR"
    "ES_LOGIN\020\001\022\031\n\025REQ_READY_ENTER_WORLD\020\002\022\031\n"
    "\025RES_READY_ENTER_WORLD\020\003\022\023\n\017REQ_ENTER_WO"
    "RLD\020\004\022\023\n\017RES_ENTER_WORLD\020\005\022\034\n\030NOTIFY_ENT"
    "ER_GAME_OBJECT\020\006\022\034\n\030NOTIFY_LEAVE_GAME_OB"
    "JECT\020\007*%\n\014PacketResult\022\013\n\007SUCCESS\020\000\022\010\n\004F"
    "AIL\020\001b\006proto3", 773);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Protocol.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Protocol_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_Protocol_2eproto_once_);
void protobuf_AddDesc_Protocol_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_Protocol_2eproto_once_,
                 &protobuf_AddDesc_Protocol_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Protocol_2eproto {
  StaticDescriptorInitializer_Protocol_2eproto() {
    protobuf_AddDesc_Protocol_2eproto();
  }
} static_descriptor_initializer_Protocol_2eproto_;
const ::google::protobuf::EnumDescriptor* PacketCommand_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PacketCommand_descriptor_;
}
bool PacketCommand_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PacketResult_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PacketResult_descriptor_;
}
bool PacketResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqLogin::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqLogin::ReqLogin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Protocol_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReqLogin)
}

void ReqLogin::InitAsDefaultInstance() {
}

ReqLogin::ReqLogin(const ReqLogin& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ReqLogin)
}

void ReqLogin::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ReqLogin::~ReqLogin() {
  // @@protoc_insertion_point(destructor:ReqLogin)
  SharedDtor();
}

void ReqLogin::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqLogin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqLogin::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqLogin_descriptor_;
}

const ReqLogin& ReqLogin::default_instance() {
  protobuf_InitDefaults_Protocol_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ReqLogin> ReqLogin_default_instance_;

ReqLogin* ReqLogin::New(::google::protobuf::Arena* arena) const {
  ReqLogin* n = new ReqLogin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReqLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:ReqLogin)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ReqLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReqLogin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ReqLogin.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReqLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReqLogin)
  return false;
#undef DO_
}

void ReqLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReqLogin)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ReqLogin.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ReqLogin)
}

::google::protobuf::uint8* ReqLogin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReqLogin)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ReqLogin.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ReqLogin)
  return target;
}

size_t ReqLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReqLogin)
  size_t total_size = 0;

  // optional string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqLogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReqLogin)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReqLogin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqLogin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReqLogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReqLogin)
    UnsafeMergeFrom(*source);
  }
}

void ReqLogin::MergeFrom(const ReqLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReqLogin)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ReqLogin::UnsafeMergeFrom(const ReqLogin& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void ReqLogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReqLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqLogin::CopyFrom(const ReqLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReqLogin)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ReqLogin::IsInitialized() const {

  return true;
}

void ReqLogin::Swap(ReqLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqLogin::InternalSwap(ReqLogin* other) {
  id_.Swap(&other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqLogin::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqLogin_descriptor_;
  metadata.reflection = ReqLogin_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReqLogin

// optional string id = 1;
void ReqLogin::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReqLogin::id() const {
  // @@protoc_insertion_point(field_get:ReqLogin.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReqLogin::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ReqLogin.id)
}
void ReqLogin::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ReqLogin.id)
}
void ReqLogin::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ReqLogin.id)
}
::std::string* ReqLogin::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ReqLogin.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReqLogin::release_id() {
  // @@protoc_insertion_point(field_release:ReqLogin.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReqLogin::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ReqLogin.id)
}

inline const ReqLogin* ReqLogin::internal_default_instance() {
  return &ReqLogin_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResLogin::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResLogin::ResLogin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Protocol_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ResLogin)
}

void ResLogin::InitAsDefaultInstance() {
}

ResLogin::ResLogin(const ResLogin& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ResLogin)
}

void ResLogin::SharedCtor() {
  result_ = 0;
  _cached_size_ = 0;
}

ResLogin::~ResLogin() {
  // @@protoc_insertion_point(destructor:ResLogin)
  SharedDtor();
}

void ResLogin::SharedDtor() {
}

void ResLogin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResLogin::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResLogin_descriptor_;
}

const ResLogin& ResLogin::default_instance() {
  protobuf_InitDefaults_Protocol_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ResLogin> ResLogin_default_instance_;

ResLogin* ResLogin::New(::google::protobuf::Arena* arena) const {
  ResLogin* n = new ResLogin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:ResLogin)
  result_ = 0;
}

bool ResLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ResLogin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .PacketResult result = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_result(static_cast< ::PacketResult >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ResLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ResLogin)
  return false;
#undef DO_
}

void ResLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ResLogin)
  // optional .PacketResult result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:ResLogin)
}

::google::protobuf::uint8* ResLogin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ResLogin)
  // optional .PacketResult result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ResLogin)
  return target;
}

size_t ResLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResLogin)
  size_t total_size = 0;

  // optional .PacketResult result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResLogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ResLogin)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ResLogin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResLogin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ResLogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ResLogin)
    UnsafeMergeFrom(*source);
  }
}

void ResLogin::MergeFrom(const ResLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResLogin)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ResLogin::UnsafeMergeFrom(const ResLogin& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void ResLogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ResLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResLogin::CopyFrom(const ResLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResLogin)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ResLogin::IsInitialized() const {

  return true;
}

void ResLogin::Swap(ResLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResLogin::InternalSwap(ResLogin* other) {
  std::swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResLogin::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResLogin_descriptor_;
  metadata.reflection = ResLogin_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResLogin

// optional .PacketResult result = 1;
void ResLogin::clear_result() {
  result_ = 0;
}
::PacketResult ResLogin::result() const {
  // @@protoc_insertion_point(field_get:ResLogin.result)
  return static_cast< ::PacketResult >(result_);
}
void ResLogin::set_result(::PacketResult value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:ResLogin.result)
}

inline const ResLogin* ResLogin::internal_default_instance() {
  return &ResLogin_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqReadyEnterWorld::ReqReadyEnterWorld()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Protocol_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReqReadyEnterWorld)
}

void ReqReadyEnterWorld::InitAsDefaultInstance() {
}

ReqReadyEnterWorld::ReqReadyEnterWorld(const ReqReadyEnterWorld& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ReqReadyEnterWorld)
}

void ReqReadyEnterWorld::SharedCtor() {
  _cached_size_ = 0;
}

ReqReadyEnterWorld::~ReqReadyEnterWorld() {
  // @@protoc_insertion_point(destructor:ReqReadyEnterWorld)
  SharedDtor();
}

void ReqReadyEnterWorld::SharedDtor() {
}

void ReqReadyEnterWorld::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqReadyEnterWorld::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqReadyEnterWorld_descriptor_;
}

const ReqReadyEnterWorld& ReqReadyEnterWorld::default_instance() {
  protobuf_InitDefaults_Protocol_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ReqReadyEnterWorld> ReqReadyEnterWorld_default_instance_;

ReqReadyEnterWorld* ReqReadyEnterWorld::New(::google::protobuf::Arena* arena) const {
  ReqReadyEnterWorld* n = new ReqReadyEnterWorld;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReqReadyEnterWorld::Clear() {
// @@protoc_insertion_point(message_clear_start:ReqReadyEnterWorld)
}

bool ReqReadyEnterWorld::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReqReadyEnterWorld)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:ReqReadyEnterWorld)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReqReadyEnterWorld)
  return false;
#undef DO_
}

void ReqReadyEnterWorld::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReqReadyEnterWorld)
  // @@protoc_insertion_point(serialize_end:ReqReadyEnterWorld)
}

::google::protobuf::uint8* ReqReadyEnterWorld::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReqReadyEnterWorld)
  // @@protoc_insertion_point(serialize_to_array_end:ReqReadyEnterWorld)
  return target;
}

size_t ReqReadyEnterWorld::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReqReadyEnterWorld)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqReadyEnterWorld::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReqReadyEnterWorld)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReqReadyEnterWorld* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqReadyEnterWorld>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReqReadyEnterWorld)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReqReadyEnterWorld)
    UnsafeMergeFrom(*source);
  }
}

void ReqReadyEnterWorld::MergeFrom(const ReqReadyEnterWorld& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReqReadyEnterWorld)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ReqReadyEnterWorld::UnsafeMergeFrom(const ReqReadyEnterWorld& from) {
  GOOGLE_DCHECK(&from != this);
}

void ReqReadyEnterWorld::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReqReadyEnterWorld)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqReadyEnterWorld::CopyFrom(const ReqReadyEnterWorld& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReqReadyEnterWorld)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ReqReadyEnterWorld::IsInitialized() const {

  return true;
}

void ReqReadyEnterWorld::Swap(ReqReadyEnterWorld* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqReadyEnterWorld::InternalSwap(ReqReadyEnterWorld* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqReadyEnterWorld::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqReadyEnterWorld_descriptor_;
  metadata.reflection = ReqReadyEnterWorld_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReqReadyEnterWorld

inline const ReqReadyEnterWorld* ReqReadyEnterWorld::internal_default_instance() {
  return &ReqReadyEnterWorld_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PkVector3::kXFieldNumber;
const int PkVector3::kYFieldNumber;
const int PkVector3::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PkVector3::PkVector3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Protocol_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:PkVector3)
}

void PkVector3::InitAsDefaultInstance() {
}

PkVector3::PkVector3(const PkVector3& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PkVector3)
}

void PkVector3::SharedCtor() {
  ::memset(&x_, 0, reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_) + sizeof(z_));
  _cached_size_ = 0;
}

PkVector3::~PkVector3() {
  // @@protoc_insertion_point(destructor:PkVector3)
  SharedDtor();
}

void PkVector3::SharedDtor() {
}

void PkVector3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkVector3::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkVector3_descriptor_;
}

const PkVector3& PkVector3::default_instance() {
  protobuf_InitDefaults_Protocol_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PkVector3> PkVector3_default_instance_;

PkVector3* PkVector3::New(::google::protobuf::Arena* arena) const {
  PkVector3* n = new PkVector3;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkVector3::Clear() {
// @@protoc_insertion_point(message_clear_start:PkVector3)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PkVector3, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PkVector3*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(x_, z_);

#undef ZR_HELPER_
#undef ZR_

}

bool PkVector3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PkVector3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float x = 1;
      case 1: {
        if (tag == 13) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_y;
        break;
      }

      // optional float y = 2;
      case 2: {
        if (tag == 21) {
         parse_y:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_z;
        break;
      }

      // optional float z = 3;
      case 3: {
        if (tag == 29) {
         parse_z:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PkVector3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PkVector3)
  return false;
#undef DO_
}

void PkVector3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PkVector3)
  // optional float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // optional float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // optional float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  // @@protoc_insertion_point(serialize_end:PkVector3)
}

::google::protobuf::uint8* PkVector3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PkVector3)
  // optional float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // optional float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // optional float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PkVector3)
  return target;
}

size_t PkVector3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PkVector3)
  size_t total_size = 0;

  // optional float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // optional float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // optional float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkVector3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PkVector3)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkVector3* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PkVector3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PkVector3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PkVector3)
    UnsafeMergeFrom(*source);
  }
}

void PkVector3::MergeFrom(const PkVector3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PkVector3)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PkVector3::UnsafeMergeFrom(const PkVector3& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void PkVector3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PkVector3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkVector3::CopyFrom(const PkVector3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PkVector3)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PkVector3::IsInitialized() const {

  return true;
}

void PkVector3::Swap(PkVector3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkVector3::InternalSwap(PkVector3* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkVector3::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkVector3_descriptor_;
  metadata.reflection = PkVector3_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PkVector3

// optional float x = 1;
void PkVector3::clear_x() {
  x_ = 0;
}
float PkVector3::x() const {
  // @@protoc_insertion_point(field_get:PkVector3.x)
  return x_;
}
void PkVector3::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:PkVector3.x)
}

// optional float y = 2;
void PkVector3::clear_y() {
  y_ = 0;
}
float PkVector3::y() const {
  // @@protoc_insertion_point(field_get:PkVector3.y)
  return y_;
}
void PkVector3::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:PkVector3.y)
}

// optional float z = 3;
void PkVector3::clear_z() {
  z_ = 0;
}
float PkVector3::z() const {
  // @@protoc_insertion_point(field_get:PkVector3.z)
  return z_;
}
void PkVector3::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:PkVector3.z)
}

inline const PkVector3* PkVector3::internal_default_instance() {
  return &PkVector3_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameObjectInfo::kHandleFieldNumber;
const int GameObjectInfo::kTypeFieldNumber;
const int GameObjectInfo::kPosFieldNumber;
const int GameObjectInfo::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameObjectInfo::GameObjectInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Protocol_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:GameObjectInfo)
}

void GameObjectInfo::InitAsDefaultInstance() {
  pos_ = const_cast< ::PkVector3*>(
      ::PkVector3::internal_default_instance());
}

GameObjectInfo::GameObjectInfo(const GameObjectInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GameObjectInfo)
}

void GameObjectInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pos_ = NULL;
  ::memset(&handle_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&handle_) + sizeof(type_));
  _cached_size_ = 0;
}

GameObjectInfo::~GameObjectInfo() {
  // @@protoc_insertion_point(destructor:GameObjectInfo)
  SharedDtor();
}

void GameObjectInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &GameObjectInfo_default_instance_.get()) {
    delete pos_;
  }
}

void GameObjectInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameObjectInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GameObjectInfo_descriptor_;
}

const GameObjectInfo& GameObjectInfo::default_instance() {
  protobuf_InitDefaults_Protocol_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GameObjectInfo> GameObjectInfo_default_instance_;

GameObjectInfo* GameObjectInfo::New(::google::protobuf::Arena* arena) const {
  GameObjectInfo* n = new GameObjectInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameObjectInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GameObjectInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(GameObjectInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GameObjectInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(handle_, type_);
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool GameObjectInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GameObjectInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 handle = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &handle_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // optional int32 type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_pos;
        break;
      }

      // optional .PkVector3 pos = 3;
      case 3: {
        if (tag == 26) {
         parse_pos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_name;
        break;
      }

      // optional string name = 4;
      case 4: {
        if (tag == 34) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GameObjectInfo.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GameObjectInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GameObjectInfo)
  return false;
#undef DO_
}

void GameObjectInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GameObjectInfo)
  // optional int64 handle = 1;
  if (this->handle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->handle(), output);
  }

  // optional int32 type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // optional .PkVector3 pos = 3;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->pos_, output);
  }

  // optional string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GameObjectInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:GameObjectInfo)
}

::google::protobuf::uint8* GameObjectInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GameObjectInfo)
  // optional int64 handle = 1;
  if (this->handle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->handle(), target);
  }

  // optional int32 type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // optional .PkVector3 pos = 3;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->pos_, false, target);
  }

  // optional string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GameObjectInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:GameObjectInfo)
  return target;
}

size_t GameObjectInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GameObjectInfo)
  size_t total_size = 0;

  // optional int64 handle = 1;
  if (this->handle() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->handle());
  }

  // optional int32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // optional .PkVector3 pos = 3;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // optional string name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameObjectInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GameObjectInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GameObjectInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameObjectInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GameObjectInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GameObjectInfo)
    UnsafeMergeFrom(*source);
  }
}

void GameObjectInfo::MergeFrom(const GameObjectInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GameObjectInfo)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GameObjectInfo::UnsafeMergeFrom(const GameObjectInfo& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.handle() != 0) {
    set_handle(from.handle());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.has_pos()) {
    mutable_pos()->::PkVector3::MergeFrom(from.pos());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GameObjectInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GameObjectInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameObjectInfo::CopyFrom(const GameObjectInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GameObjectInfo)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GameObjectInfo::IsInitialized() const {

  return true;
}

void GameObjectInfo::Swap(GameObjectInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameObjectInfo::InternalSwap(GameObjectInfo* other) {
  std::swap(handle_, other->handle_);
  std::swap(type_, other->type_);
  std::swap(pos_, other->pos_);
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameObjectInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GameObjectInfo_descriptor_;
  metadata.reflection = GameObjectInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GameObjectInfo

// optional int64 handle = 1;
void GameObjectInfo::clear_handle() {
  handle_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 GameObjectInfo::handle() const {
  // @@protoc_insertion_point(field_get:GameObjectInfo.handle)
  return handle_;
}
void GameObjectInfo::set_handle(::google::protobuf::int64 value) {
  
  handle_ = value;
  // @@protoc_insertion_point(field_set:GameObjectInfo.handle)
}

// optional int32 type = 2;
void GameObjectInfo::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 GameObjectInfo::type() const {
  // @@protoc_insertion_point(field_get:GameObjectInfo.type)
  return type_;
}
void GameObjectInfo::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:GameObjectInfo.type)
}

// optional .PkVector3 pos = 3;
bool GameObjectInfo::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void GameObjectInfo::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::PkVector3& GameObjectInfo::pos() const {
  // @@protoc_insertion_point(field_get:GameObjectInfo.pos)
  return pos_ != NULL ? *pos_
                         : *::PkVector3::internal_default_instance();
}
::PkVector3* GameObjectInfo::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::PkVector3;
  }
  // @@protoc_insertion_point(field_mutable:GameObjectInfo.pos)
  return pos_;
}
::PkVector3* GameObjectInfo::release_pos() {
  // @@protoc_insertion_point(field_release:GameObjectInfo.pos)
  
  ::PkVector3* temp = pos_;
  pos_ = NULL;
  return temp;
}
void GameObjectInfo::set_allocated_pos(::PkVector3* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:GameObjectInfo.pos)
}

// optional string name = 4;
void GameObjectInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GameObjectInfo::name() const {
  // @@protoc_insertion_point(field_get:GameObjectInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GameObjectInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GameObjectInfo.name)
}
void GameObjectInfo::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GameObjectInfo.name)
}
void GameObjectInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GameObjectInfo.name)
}
::std::string* GameObjectInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:GameObjectInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GameObjectInfo::release_name() {
  // @@protoc_insertion_point(field_release:GameObjectInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GameObjectInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:GameObjectInfo.name)
}

inline const GameObjectInfo* GameObjectInfo::internal_default_instance() {
  return &GameObjectInfo_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResReadyEnterWorld::kResultFieldNumber;
const int ResReadyEnterWorld::kGameObjectInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResReadyEnterWorld::ResReadyEnterWorld()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Protocol_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ResReadyEnterWorld)
}

void ResReadyEnterWorld::InitAsDefaultInstance() {
  game_object_info_ = const_cast< ::GameObjectInfo*>(
      ::GameObjectInfo::internal_default_instance());
}

ResReadyEnterWorld::ResReadyEnterWorld(const ResReadyEnterWorld& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ResReadyEnterWorld)
}

void ResReadyEnterWorld::SharedCtor() {
  game_object_info_ = NULL;
  result_ = 0;
  _cached_size_ = 0;
}

ResReadyEnterWorld::~ResReadyEnterWorld() {
  // @@protoc_insertion_point(destructor:ResReadyEnterWorld)
  SharedDtor();
}

void ResReadyEnterWorld::SharedDtor() {
  if (this != &ResReadyEnterWorld_default_instance_.get()) {
    delete game_object_info_;
  }
}

void ResReadyEnterWorld::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResReadyEnterWorld::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResReadyEnterWorld_descriptor_;
}

const ResReadyEnterWorld& ResReadyEnterWorld::default_instance() {
  protobuf_InitDefaults_Protocol_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ResReadyEnterWorld> ResReadyEnterWorld_default_instance_;

ResReadyEnterWorld* ResReadyEnterWorld::New(::google::protobuf::Arena* arena) const {
  ResReadyEnterWorld* n = new ResReadyEnterWorld;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResReadyEnterWorld::Clear() {
// @@protoc_insertion_point(message_clear_start:ResReadyEnterWorld)
  result_ = 0;
  if (GetArenaNoVirtual() == NULL && game_object_info_ != NULL) delete game_object_info_;
  game_object_info_ = NULL;
}

bool ResReadyEnterWorld::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ResReadyEnterWorld)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .PacketResult result = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_result(static_cast< ::PacketResult >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_game_object_info;
        break;
      }

      // optional .GameObjectInfo game_object_info = 2;
      case 2: {
        if (tag == 18) {
         parse_game_object_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_game_object_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ResReadyEnterWorld)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ResReadyEnterWorld)
  return false;
#undef DO_
}

void ResReadyEnterWorld::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ResReadyEnterWorld)
  // optional .PacketResult result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // optional .GameObjectInfo game_object_info = 2;
  if (this->has_game_object_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->game_object_info_, output);
  }

  // @@protoc_insertion_point(serialize_end:ResReadyEnterWorld)
}

::google::protobuf::uint8* ResReadyEnterWorld::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ResReadyEnterWorld)
  // optional .PacketResult result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // optional .GameObjectInfo game_object_info = 2;
  if (this->has_game_object_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->game_object_info_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ResReadyEnterWorld)
  return target;
}

size_t ResReadyEnterWorld::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResReadyEnterWorld)
  size_t total_size = 0;

  // optional .PacketResult result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  // optional .GameObjectInfo game_object_info = 2;
  if (this->has_game_object_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->game_object_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResReadyEnterWorld::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ResReadyEnterWorld)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ResReadyEnterWorld* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResReadyEnterWorld>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ResReadyEnterWorld)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ResReadyEnterWorld)
    UnsafeMergeFrom(*source);
  }
}

void ResReadyEnterWorld::MergeFrom(const ResReadyEnterWorld& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResReadyEnterWorld)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ResReadyEnterWorld::UnsafeMergeFrom(const ResReadyEnterWorld& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.has_game_object_info()) {
    mutable_game_object_info()->::GameObjectInfo::MergeFrom(from.game_object_info());
  }
}

void ResReadyEnterWorld::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ResReadyEnterWorld)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResReadyEnterWorld::CopyFrom(const ResReadyEnterWorld& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResReadyEnterWorld)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ResReadyEnterWorld::IsInitialized() const {

  return true;
}

void ResReadyEnterWorld::Swap(ResReadyEnterWorld* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResReadyEnterWorld::InternalSwap(ResReadyEnterWorld* other) {
  std::swap(result_, other->result_);
  std::swap(game_object_info_, other->game_object_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResReadyEnterWorld::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResReadyEnterWorld_descriptor_;
  metadata.reflection = ResReadyEnterWorld_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResReadyEnterWorld

// optional .PacketResult result = 1;
void ResReadyEnterWorld::clear_result() {
  result_ = 0;
}
::PacketResult ResReadyEnterWorld::result() const {
  // @@protoc_insertion_point(field_get:ResReadyEnterWorld.result)
  return static_cast< ::PacketResult >(result_);
}
void ResReadyEnterWorld::set_result(::PacketResult value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:ResReadyEnterWorld.result)
}

// optional .GameObjectInfo game_object_info = 2;
bool ResReadyEnterWorld::has_game_object_info() const {
  return this != internal_default_instance() && game_object_info_ != NULL;
}
void ResReadyEnterWorld::clear_game_object_info() {
  if (GetArenaNoVirtual() == NULL && game_object_info_ != NULL) delete game_object_info_;
  game_object_info_ = NULL;
}
const ::GameObjectInfo& ResReadyEnterWorld::game_object_info() const {
  // @@protoc_insertion_point(field_get:ResReadyEnterWorld.game_object_info)
  return game_object_info_ != NULL ? *game_object_info_
                         : *::GameObjectInfo::internal_default_instance();
}
::GameObjectInfo* ResReadyEnterWorld::mutable_game_object_info() {
  
  if (game_object_info_ == NULL) {
    game_object_info_ = new ::GameObjectInfo;
  }
  // @@protoc_insertion_point(field_mutable:ResReadyEnterWorld.game_object_info)
  return game_object_info_;
}
::GameObjectInfo* ResReadyEnterWorld::release_game_object_info() {
  // @@protoc_insertion_point(field_release:ResReadyEnterWorld.game_object_info)
  
  ::GameObjectInfo* temp = game_object_info_;
  game_object_info_ = NULL;
  return temp;
}
void ResReadyEnterWorld::set_allocated_game_object_info(::GameObjectInfo* game_object_info) {
  delete game_object_info_;
  game_object_info_ = game_object_info;
  if (game_object_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ResReadyEnterWorld.game_object_info)
}

inline const ResReadyEnterWorld* ResReadyEnterWorld::internal_default_instance() {
  return &ResReadyEnterWorld_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqEnterWorld::ReqEnterWorld()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Protocol_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReqEnterWorld)
}

void ReqEnterWorld::InitAsDefaultInstance() {
}

ReqEnterWorld::ReqEnterWorld(const ReqEnterWorld& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ReqEnterWorld)
}

void ReqEnterWorld::SharedCtor() {
  _cached_size_ = 0;
}

ReqEnterWorld::~ReqEnterWorld() {
  // @@protoc_insertion_point(destructor:ReqEnterWorld)
  SharedDtor();
}

void ReqEnterWorld::SharedDtor() {
}

void ReqEnterWorld::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqEnterWorld::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqEnterWorld_descriptor_;
}

const ReqEnterWorld& ReqEnterWorld::default_instance() {
  protobuf_InitDefaults_Protocol_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ReqEnterWorld> ReqEnterWorld_default_instance_;

ReqEnterWorld* ReqEnterWorld::New(::google::protobuf::Arena* arena) const {
  ReqEnterWorld* n = new ReqEnterWorld;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReqEnterWorld::Clear() {
// @@protoc_insertion_point(message_clear_start:ReqEnterWorld)
}

bool ReqEnterWorld::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReqEnterWorld)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:ReqEnterWorld)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReqEnterWorld)
  return false;
#undef DO_
}

void ReqEnterWorld::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReqEnterWorld)
  // @@protoc_insertion_point(serialize_end:ReqEnterWorld)
}

::google::protobuf::uint8* ReqEnterWorld::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReqEnterWorld)
  // @@protoc_insertion_point(serialize_to_array_end:ReqEnterWorld)
  return target;
}

size_t ReqEnterWorld::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReqEnterWorld)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqEnterWorld::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReqEnterWorld)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReqEnterWorld* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqEnterWorld>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReqEnterWorld)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReqEnterWorld)
    UnsafeMergeFrom(*source);
  }
}

void ReqEnterWorld::MergeFrom(const ReqEnterWorld& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReqEnterWorld)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ReqEnterWorld::UnsafeMergeFrom(const ReqEnterWorld& from) {
  GOOGLE_DCHECK(&from != this);
}

void ReqEnterWorld::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReqEnterWorld)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqEnterWorld::CopyFrom(const ReqEnterWorld& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReqEnterWorld)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ReqEnterWorld::IsInitialized() const {

  return true;
}

void ReqEnterWorld::Swap(ReqEnterWorld* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqEnterWorld::InternalSwap(ReqEnterWorld* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqEnterWorld::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqEnterWorld_descriptor_;
  metadata.reflection = ReqEnterWorld_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReqEnterWorld

inline const ReqEnterWorld* ReqEnterWorld::internal_default_instance() {
  return &ReqEnterWorld_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResEnterWorld::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResEnterWorld::ResEnterWorld()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Protocol_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ResEnterWorld)
}

void ResEnterWorld::InitAsDefaultInstance() {
}

ResEnterWorld::ResEnterWorld(const ResEnterWorld& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ResEnterWorld)
}

void ResEnterWorld::SharedCtor() {
  result_ = 0;
  _cached_size_ = 0;
}

ResEnterWorld::~ResEnterWorld() {
  // @@protoc_insertion_point(destructor:ResEnterWorld)
  SharedDtor();
}

void ResEnterWorld::SharedDtor() {
}

void ResEnterWorld::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResEnterWorld::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResEnterWorld_descriptor_;
}

const ResEnterWorld& ResEnterWorld::default_instance() {
  protobuf_InitDefaults_Protocol_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ResEnterWorld> ResEnterWorld_default_instance_;

ResEnterWorld* ResEnterWorld::New(::google::protobuf::Arena* arena) const {
  ResEnterWorld* n = new ResEnterWorld;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResEnterWorld::Clear() {
// @@protoc_insertion_point(message_clear_start:ResEnterWorld)
  result_ = 0;
}

bool ResEnterWorld::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ResEnterWorld)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .PacketResult result = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_result(static_cast< ::PacketResult >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ResEnterWorld)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ResEnterWorld)
  return false;
#undef DO_
}

void ResEnterWorld::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ResEnterWorld)
  // optional .PacketResult result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:ResEnterWorld)
}

::google::protobuf::uint8* ResEnterWorld::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ResEnterWorld)
  // optional .PacketResult result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ResEnterWorld)
  return target;
}

size_t ResEnterWorld::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResEnterWorld)
  size_t total_size = 0;

  // optional .PacketResult result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResEnterWorld::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ResEnterWorld)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ResEnterWorld* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResEnterWorld>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ResEnterWorld)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ResEnterWorld)
    UnsafeMergeFrom(*source);
  }
}

void ResEnterWorld::MergeFrom(const ResEnterWorld& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResEnterWorld)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ResEnterWorld::UnsafeMergeFrom(const ResEnterWorld& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void ResEnterWorld::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ResEnterWorld)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResEnterWorld::CopyFrom(const ResEnterWorld& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResEnterWorld)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ResEnterWorld::IsInitialized() const {

  return true;
}

void ResEnterWorld::Swap(ResEnterWorld* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResEnterWorld::InternalSwap(ResEnterWorld* other) {
  std::swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResEnterWorld::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResEnterWorld_descriptor_;
  metadata.reflection = ResEnterWorld_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResEnterWorld

// optional .PacketResult result = 1;
void ResEnterWorld::clear_result() {
  result_ = 0;
}
::PacketResult ResEnterWorld::result() const {
  // @@protoc_insertion_point(field_get:ResEnterWorld.result)
  return static_cast< ::PacketResult >(result_);
}
void ResEnterWorld::set_result(::PacketResult value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:ResEnterWorld.result)
}

inline const ResEnterWorld* ResEnterWorld::internal_default_instance() {
  return &ResEnterWorld_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NotifyEnterGameObject::kGameObjectInfosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NotifyEnterGameObject::NotifyEnterGameObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Protocol_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:NotifyEnterGameObject)
}

void NotifyEnterGameObject::InitAsDefaultInstance() {
}

NotifyEnterGameObject::NotifyEnterGameObject(const NotifyEnterGameObject& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NotifyEnterGameObject)
}

void NotifyEnterGameObject::SharedCtor() {
  _cached_size_ = 0;
}

NotifyEnterGameObject::~NotifyEnterGameObject() {
  // @@protoc_insertion_point(destructor:NotifyEnterGameObject)
  SharedDtor();
}

void NotifyEnterGameObject::SharedDtor() {
}

void NotifyEnterGameObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyEnterGameObject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyEnterGameObject_descriptor_;
}

const NotifyEnterGameObject& NotifyEnterGameObject::default_instance() {
  protobuf_InitDefaults_Protocol_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<NotifyEnterGameObject> NotifyEnterGameObject_default_instance_;

NotifyEnterGameObject* NotifyEnterGameObject::New(::google::protobuf::Arena* arena) const {
  NotifyEnterGameObject* n = new NotifyEnterGameObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NotifyEnterGameObject::Clear() {
// @@protoc_insertion_point(message_clear_start:NotifyEnterGameObject)
  game_object_infos_.Clear();
}

bool NotifyEnterGameObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NotifyEnterGameObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .GameObjectInfo game_object_infos = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_game_object_infos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_game_object_infos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_game_object_infos;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NotifyEnterGameObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NotifyEnterGameObject)
  return false;
#undef DO_
}

void NotifyEnterGameObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NotifyEnterGameObject)
  // repeated .GameObjectInfo game_object_infos = 1;
  for (unsigned int i = 0, n = this->game_object_infos_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->game_object_infos(i), output);
  }

  // @@protoc_insertion_point(serialize_end:NotifyEnterGameObject)
}

::google::protobuf::uint8* NotifyEnterGameObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NotifyEnterGameObject)
  // repeated .GameObjectInfo game_object_infos = 1;
  for (unsigned int i = 0, n = this->game_object_infos_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->game_object_infos(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NotifyEnterGameObject)
  return target;
}

size_t NotifyEnterGameObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NotifyEnterGameObject)
  size_t total_size = 0;

  // repeated .GameObjectInfo game_object_infos = 1;
  {
    unsigned int count = this->game_object_infos_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->game_object_infos(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyEnterGameObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NotifyEnterGameObject)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const NotifyEnterGameObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NotifyEnterGameObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NotifyEnterGameObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NotifyEnterGameObject)
    UnsafeMergeFrom(*source);
  }
}

void NotifyEnterGameObject::MergeFrom(const NotifyEnterGameObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NotifyEnterGameObject)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void NotifyEnterGameObject::UnsafeMergeFrom(const NotifyEnterGameObject& from) {
  GOOGLE_DCHECK(&from != this);
  game_object_infos_.MergeFrom(from.game_object_infos_);
}

void NotifyEnterGameObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NotifyEnterGameObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyEnterGameObject::CopyFrom(const NotifyEnterGameObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NotifyEnterGameObject)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool NotifyEnterGameObject::IsInitialized() const {

  return true;
}

void NotifyEnterGameObject::Swap(NotifyEnterGameObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotifyEnterGameObject::InternalSwap(NotifyEnterGameObject* other) {
  game_object_infos_.UnsafeArenaSwap(&other->game_object_infos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NotifyEnterGameObject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyEnterGameObject_descriptor_;
  metadata.reflection = NotifyEnterGameObject_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NotifyEnterGameObject

// repeated .GameObjectInfo game_object_infos = 1;
int NotifyEnterGameObject::game_object_infos_size() const {
  return game_object_infos_.size();
}
void NotifyEnterGameObject::clear_game_object_infos() {
  game_object_infos_.Clear();
}
const ::GameObjectInfo& NotifyEnterGameObject::game_object_infos(int index) const {
  // @@protoc_insertion_point(field_get:NotifyEnterGameObject.game_object_infos)
  return game_object_infos_.Get(index);
}
::GameObjectInfo* NotifyEnterGameObject::mutable_game_object_infos(int index) {
  // @@protoc_insertion_point(field_mutable:NotifyEnterGameObject.game_object_infos)
  return game_object_infos_.Mutable(index);
}
::GameObjectInfo* NotifyEnterGameObject::add_game_object_infos() {
  // @@protoc_insertion_point(field_add:NotifyEnterGameObject.game_object_infos)
  return game_object_infos_.Add();
}
::google::protobuf::RepeatedPtrField< ::GameObjectInfo >*
NotifyEnterGameObject::mutable_game_object_infos() {
  // @@protoc_insertion_point(field_mutable_list:NotifyEnterGameObject.game_object_infos)
  return &game_object_infos_;
}
const ::google::protobuf::RepeatedPtrField< ::GameObjectInfo >&
NotifyEnterGameObject::game_object_infos() const {
  // @@protoc_insertion_point(field_list:NotifyEnterGameObject.game_object_infos)
  return game_object_infos_;
}

inline const NotifyEnterGameObject* NotifyEnterGameObject::internal_default_instance() {
  return &NotifyEnterGameObject_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NotifyLeaveGameObject::kGameObjectHandlesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NotifyLeaveGameObject::NotifyLeaveGameObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Protocol_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:NotifyLeaveGameObject)
}

void NotifyLeaveGameObject::InitAsDefaultInstance() {
}

NotifyLeaveGameObject::NotifyLeaveGameObject(const NotifyLeaveGameObject& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NotifyLeaveGameObject)
}

void NotifyLeaveGameObject::SharedCtor() {
  _cached_size_ = 0;
}

NotifyLeaveGameObject::~NotifyLeaveGameObject() {
  // @@protoc_insertion_point(destructor:NotifyLeaveGameObject)
  SharedDtor();
}

void NotifyLeaveGameObject::SharedDtor() {
}

void NotifyLeaveGameObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyLeaveGameObject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyLeaveGameObject_descriptor_;
}

const NotifyLeaveGameObject& NotifyLeaveGameObject::default_instance() {
  protobuf_InitDefaults_Protocol_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<NotifyLeaveGameObject> NotifyLeaveGameObject_default_instance_;

NotifyLeaveGameObject* NotifyLeaveGameObject::New(::google::protobuf::Arena* arena) const {
  NotifyLeaveGameObject* n = new NotifyLeaveGameObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NotifyLeaveGameObject::Clear() {
// @@protoc_insertion_point(message_clear_start:NotifyLeaveGameObject)
  game_object_handles_.Clear();
}

bool NotifyLeaveGameObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NotifyLeaveGameObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 game_object_handles = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_game_object_handles())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10, input, this->mutable_game_object_handles())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NotifyLeaveGameObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NotifyLeaveGameObject)
  return false;
#undef DO_
}

void NotifyLeaveGameObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NotifyLeaveGameObject)
  // repeated int64 game_object_handles = 1;
  if (this->game_object_handles_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_game_object_handles_cached_byte_size_);
  }
  for (int i = 0; i < this->game_object_handles_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->game_object_handles(i), output);
  }

  // @@protoc_insertion_point(serialize_end:NotifyLeaveGameObject)
}

::google::protobuf::uint8* NotifyLeaveGameObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NotifyLeaveGameObject)
  // repeated int64 game_object_handles = 1;
  if (this->game_object_handles_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _game_object_handles_cached_byte_size_, target);
  }
  for (int i = 0; i < this->game_object_handles_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->game_object_handles(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NotifyLeaveGameObject)
  return target;
}

size_t NotifyLeaveGameObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NotifyLeaveGameObject)
  size_t total_size = 0;

  // repeated int64 game_object_handles = 1;
  {
    size_t data_size = 0;
    unsigned int count = this->game_object_handles_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->game_object_handles(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _game_object_handles_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyLeaveGameObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NotifyLeaveGameObject)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const NotifyLeaveGameObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NotifyLeaveGameObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NotifyLeaveGameObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NotifyLeaveGameObject)
    UnsafeMergeFrom(*source);
  }
}

void NotifyLeaveGameObject::MergeFrom(const NotifyLeaveGameObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NotifyLeaveGameObject)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void NotifyLeaveGameObject::UnsafeMergeFrom(const NotifyLeaveGameObject& from) {
  GOOGLE_DCHECK(&from != this);
  game_object_handles_.UnsafeMergeFrom(from.game_object_handles_);
}

void NotifyLeaveGameObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NotifyLeaveGameObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyLeaveGameObject::CopyFrom(const NotifyLeaveGameObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NotifyLeaveGameObject)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool NotifyLeaveGameObject::IsInitialized() const {

  return true;
}

void NotifyLeaveGameObject::Swap(NotifyLeaveGameObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotifyLeaveGameObject::InternalSwap(NotifyLeaveGameObject* other) {
  game_object_handles_.UnsafeArenaSwap(&other->game_object_handles_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NotifyLeaveGameObject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyLeaveGameObject_descriptor_;
  metadata.reflection = NotifyLeaveGameObject_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NotifyLeaveGameObject

// repeated int64 game_object_handles = 1;
int NotifyLeaveGameObject::game_object_handles_size() const {
  return game_object_handles_.size();
}
void NotifyLeaveGameObject::clear_game_object_handles() {
  game_object_handles_.Clear();
}
::google::protobuf::int64 NotifyLeaveGameObject::game_object_handles(int index) const {
  // @@protoc_insertion_point(field_get:NotifyLeaveGameObject.game_object_handles)
  return game_object_handles_.Get(index);
}
void NotifyLeaveGameObject::set_game_object_handles(int index, ::google::protobuf::int64 value) {
  game_object_handles_.Set(index, value);
  // @@protoc_insertion_point(field_set:NotifyLeaveGameObject.game_object_handles)
}
void NotifyLeaveGameObject::add_game_object_handles(::google::protobuf::int64 value) {
  game_object_handles_.Add(value);
  // @@protoc_insertion_point(field_add:NotifyLeaveGameObject.game_object_handles)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
NotifyLeaveGameObject::game_object_handles() const {
  // @@protoc_insertion_point(field_list:NotifyLeaveGameObject.game_object_handles)
  return game_object_handles_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
NotifyLeaveGameObject::mutable_game_object_handles() {
  // @@protoc_insertion_point(field_mutable_list:NotifyLeaveGameObject.game_object_handles)
  return &game_object_handles_;
}

inline const NotifyLeaveGameObject* NotifyLeaveGameObject::internal_default_instance() {
  return &NotifyLeaveGameObject_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
